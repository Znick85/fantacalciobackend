"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-haaqk1_%qij100jb9g2ly779z1s7*j+00#d$x@bvf1j6+_9saq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS è una lista di stringhe che definiscono gli host/domini
ALLOWED_HOSTS = ['192.168.1.35', 'localhost', '47.53.162.51','127.0.0.1','fantacalciobackend.onrender.com',]



# Application definition
# INSTALLED_APPS è una lista di stringhe che rappresentano le applicazioni
# che sono abilitate in questo progetto Django.
# Ogni stringa si riferisce a una classe di configurazione dell'applicazione.
INSTALLED_APPS = [
    'rest_framework',
    'rest_framework_simplejwt',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Django REST Framework

    'api',  # Nuova app API
    'corsheaders',
]


# MIDDLEWARE è una lista di stringhe che definiscono i middleware utilizzati
# da Django. I middleware sono componenti leggeri che processano le richieste
# in entrata e le risposte in uscita. L'ordine è importante.
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# ROOT_URLCONF punta al modulo Python dove Django cerca la configurazione degli URL principale.

ROOT_URLCONF = 'backend.urls'

# TEMPLATES configura il motore di template di Django.

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [ # Funzioni che aggiungono automaticamente variabili di contesto ai template.
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# WSGI_APPLICATION punta al modulo Python che funge da entry point WSGI (Web Server Gateway Interface)
# per il tuo server web.
WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# Configurazione del database.

# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
        'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'neondb',
        'USER': 'neondb_owner',
        'PASSWORD': 'npg_o1JTjv0qYKPy',
        'HOST': 'ep-frosty-paper-a9uwvr1t.gwc.azure.neon.tech',
        'PORT': '5432',
    }

    #db locale

    # 'default': {
    #     'ENGINE': 'django.db.backends.postgresql',
    #     'NAME': 'fantacalcio',
    #     'USER': 'postgres',
    #     'PASSWORD': 'nclzt85',
    #     'HOST': 'localhost',
    #     'PORT': '5432',
    # }
}



# Password validation
# Impostazioni per la validazione della password utente.

# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', # Impedisce password simili agli attributi utente.
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',  # Richiede una lunghezza minima della password.
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',  # Controlla che la password non sia tra quelle comuni e facilmente 
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',  # Impedisce password composte interamente da numeri.
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# CORS_ALLOWED_ORIGINS è una lista di stringhe che definiscono gli origini
# (schemi, host e porte) da cui le richieste cross-site sono permesse.
# Essenziale per permettere al frontend (es. React) in esecuzione su un
# dominio/porta diversa di comunicare con questo backend.
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # Permette le richieste da React
    'http://130.25.12.189:3000',
    "http://192.168.1.35:3000",
    'https://mercatofrontend.netlify.app',
    'fantacalciobackend.onrender.com',
]

from datetime import timedelta

# Configurazione per django-rest-framework-simplejwt.
# Definisce le impostazioni per i JSON Web Tokens (JWT).

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
}